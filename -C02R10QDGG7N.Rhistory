filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_jitter(position = position_jitterdodge(),alpha = 0.4)+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation),method = "lm")+
ylab("Number of adults")+
theme(legend.position = "none")
plots <- plot_grid(FigA, FigB, labels = "AUTO")
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
ddmed <- ddlong %>%
filter(Offspring > 0) %>%
group_by(Generation, Treatment) %>%
summarise(medoff = median(Offspring,na.rm = T),
upoff = quantile(Offspring,0.75,na.rm = T),
lowoff = quantile(Offspring,0.25,na.rm = T))
FigB <- ddlong %>%
filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_jitter(position = position_jitterdodge(),alpha = 0.4)+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation),method = "lm"))+
ylab("Number of adults")+
theme(legend.position = "none")
plots <- plot_grid(FigA, FigB, labels = "AUTO")
legend_b <- get_legend(
FigA +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
plot_grid(legend_b, plots, ncol = 1, rel_heights = c(0.1, 1))
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
ddmed <- ddlong %>%
filter(Offspring > 0) %>%
group_by(Generation, Treatment) %>%
summarise(medoff = median(Offspring,na.rm = T),
upoff = quantile(Offspring,0.75,na.rm = T),
lowoff = quantile(Offspring,0.25,na.rm = T))
FigB <- ddlong %>%
filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_jitter(position = position_jitterdodge(),alpha = 0.4)+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation)),method = "lm")+
ylab("Number of adults")+
theme(legend.position = "none")
plots <- plot_grid(FigA, FigB, labels = "AUTO")
legend_b <- get_legend(
FigA +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
plot_grid(legend_b, plots, ncol = 1, rel_heights = c(0.1, 1))
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
ddmed <- ddlong %>%
filter(Offspring > 0) %>%
group_by(Generation, Treatment) %>%
summarise(medoff = median(Offspring,na.rm = T),
upoff = quantile(Offspring,0.75,na.rm = T),
lowoff = quantile(Offspring,0.25,na.rm = T))
FigB <- ddlong %>%
filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_jitter(position = position_jitterdodge(),alpha = 0.4)+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation)),method = "lm",method.args = list(formula = y~poly(x,2)))+
ylab("Number of adults")+
theme(legend.position = "none")
plots <- plot_grid(FigA, FigB, labels = "AUTO")
legend_b <- get_legend(
FigA +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
plot_grid(legend_b, plots, ncol = 1, rel_heights = c(0.1, 1))
?geom_smooth
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
ddmed <- ddlong %>%
filter(Offspring > 0) %>%
group_by(Generation, Treatment) %>%
summarise(medoff = median(Offspring,na.rm = T),
upoff = quantile(Offspring,0.75,na.rm = T),
lowoff = quantile(Offspring,0.25,na.rm = T))
FigB <- ddlong %>%
filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_jitter(position = position_jitterdodge(),alpha = 0.4)+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation)),method = "lm",formula = y~poly(x,2)))+
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
ddmed <- ddlong %>%
filter(Offspring > 0) %>%
group_by(Generation, Treatment) %>%
summarise(medoff = median(Offspring,na.rm = T),
upoff = quantile(Offspring,0.75,na.rm = T),
lowoff = quantile(Offspring,0.25,na.rm = T))
FigB <- ddlong %>%
filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_jitter(position = position_jitterdodge(),alpha = 0.4)+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation)),method = "lm",formula = y~poly(x,2))+
ylab("Number of adults")+
theme(legend.position = "none")
plots <- plot_grid(FigA, FigB, labels = "AUTO")
legend_b <- get_legend(
FigA +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
plot_grid(legend_b, plots, ncol = 1, rel_heights = c(0.1, 1))
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
ddmed <- ddlong %>%
filter(Offspring > 0) %>%
group_by(Generation, Treatment) %>%
summarise(medoff = median(Offspring,na.rm = T),
upoff = quantile(Offspring,0.75,na.rm = T),
lowoff = quantile(Offspring,0.25,na.rm = T))
FigB <- ddlong %>%
filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_jitter(position = position_jitterdodge(),alpha = 0.4)+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation)),method = "lm",formula = y~poly(x,3))+
ylab("Number of adults")+
theme(legend.position = "none")
plots <- plot_grid(FigA, FigB, labels = "AUTO")
legend_b <- get_legend(
FigA +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
plot_grid(legend_b, plots, ncol = 1, rel_heights = c(0.1, 1))
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
ddmed <- ddlong %>%
filter(Offspring > 0) %>%
group_by(Generation, Treatment) %>%
summarise(medoff = median(Offspring,na.rm = T),
upoff = quantile(Offspring,0.75,na.rm = T),
lowoff = quantile(Offspring,0.25,na.rm = T))
FigB <- ddlong %>%
filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_jitter(position = position_jitterdodge(),alpha = 0.4)+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation)),method = "glm",method.args(family = "poisson"))+
ylab("Number of adults")+
theme(legend.position = "none")
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
ddmed <- ddlong %>%
filter(Offspring > 0) %>%
group_by(Generation, Treatment) %>%
summarise(medoff = median(Offspring,na.rm = T),
upoff = quantile(Offspring,0.75,na.rm = T),
lowoff = quantile(Offspring,0.25,na.rm = T))
FigB <- ddlong %>%
filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_jitter(position = position_jitterdodge(),alpha = 0.4)+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation)),method = "glm",method.args = list(family = "poisson"))+
ylab("Number of adults")+
theme(legend.position = "none")
plots <- plot_grid(FigA, FigB, labels = "AUTO")
legend_b <- get_legend(
FigA +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
plot_grid(legend_b, plots, ncol = 1, rel_heights = c(0.1, 1))
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
ddmed <- ddlong %>%
filter(Offspring > 0) %>%
group_by(Generation, Treatment) %>%
summarise(medoff = median(Offspring,na.rm = T),
upoff = quantile(Offspring,0.75,na.rm = T),
lowoff = quantile(Offspring,0.25,na.rm = T))
FigB <- ddlong %>%
filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_jitter(position = position_jitterdodge(),alpha = 0.4)+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation)),method = "glm",method.args = list(family = "negativebinomial"))+
ylab("Number of adults")+
theme(legend.position = "none")
plots <- plot_grid(FigA, FigB, labels = "AUTO")
legend_b <- get_legend(
FigA +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
plot_grid(legend_b, plots, ncol = 1, rel_heights = c(0.1, 1))
?family
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
ddmed <- ddlong %>%
filter(Offspring > 0) %>%
group_by(Generation, Treatment) %>%
summarise(medoff = median(Offspring,na.rm = T),
upoff = quantile(Offspring,0.75,na.rm = T),
lowoff = quantile(Offspring,0.25,na.rm = T))
FigB <- ddlong %>%
filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_jitter(position = position_jitterdodge(),alpha = 0.4)+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation)),method = "glm",method.args = list(family = "quasipoisson"))+
ylab("Number of adults")+
theme(legend.position = "none")
plots <- plot_grid(FigA, FigB, labels = "AUTO")
legend_b <- get_legend(
FigA +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
plot_grid(legend_b, plots, ncol = 1, rel_heights = c(0.1, 1))
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
ddmed <- ddlong %>%
filter(Offspring > 0) %>%
group_by(Generation, Treatment) %>%
summarise(medoff = median(Offspring,na.rm = T),
upoff = quantile(Offspring,0.75,na.rm = T),
lowoff = quantile(Offspring,0.25,na.rm = T))
FigB <- ddlong %>%
filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_jitter(position = position_jitterdodge(),alpha = 0.4)+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation)),method = "glm",method.args = list(family = "Gamma"))+
ylab("Number of adults")+
theme(legend.position = "none")
plots <- plot_grid(FigA, FigB, labels = "AUTO")
legend_b <- get_legend(
FigA +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
plot_grid(legend_b, plots, ncol = 1, rel_heights = c(0.1, 1))
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
ddmed <- ddlong %>%
filter(Offspring > 0) %>%
group_by(Generation, Treatment) %>%
summarise(medoff = median(Offspring,na.rm = T),
upoff = quantile(Offspring,0.75,na.rm = T),
lowoff = quantile(Offspring,0.25,na.rm = T))
FigB <- ddlong %>%
filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_jitter(position = position_jitterdodge(),alpha = 0.4)+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation)),method = "glm",method.args = list(family = "quasibinomial"))+
ylab("Number of adults")+
theme(legend.position = "none")
plots <- plot_grid(FigA, FigB, labels = "AUTO")
legend_b <- get_legend(
FigA +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
plot_grid(legend_b, plots, ncol = 1, rel_heights = c(0.1, 1))
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
ddmed <- ddlong %>%
filter(Offspring > 0) %>%
group_by(Generation, Treatment) %>%
summarise(medoff = median(Offspring,na.rm = T),
upoff = quantile(Offspring,0.75,na.rm = T),
lowoff = quantile(Offspring,0.25,na.rm = T))
FigB <- ddlong %>%
filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_boxplot()+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation)),method = "glm",method.args = list(family = "quasibinomial"))+
ylab("Number of adults")+
theme(legend.position = "none")
plots <- plot_grid(FigA, FigB, labels = "AUTO")
legend_b <- get_legend(
FigA +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
plot_grid(legend_b, plots, ncol = 1, rel_heights = c(0.1, 1))
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
ddmed <- ddlong %>%
filter(Offspring > 0) %>%
group_by(Generation, Treatment) %>%
summarise(medoff = median(Offspring,na.rm = T),
upoff = quantile(Offspring,0.75,na.rm = T),
lowoff = quantile(Offspring,0.25,na.rm = T))
FigB <- ddlong %>%
filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_boxplot()+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation)),method = "glm",method.args = list(family = "quasibinomial"))+
ylab("Number of adults")+
theme(legend.position = "none")
plots <- plot_grid(FigA, FigB, labels = "AUTO")
legend_b <- get_legend(
FigA +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
plot_grid(legend_b, plots, ncol = 1, rel_heights = c(0.1, 1))
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
ddmed <- ddlong %>%
filter(Offspring > 0) %>%
group_by(Generation, Treatment) %>%
summarise(medoff = median(Offspring,na.rm = T),
upoff = quantile(Offspring,0.75,na.rm = T),
lowoff = quantile(Offspring,0.25,na.rm = T))
FigB <- ddlong %>%
# filter(Offspring > 0) %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_boxplot()+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation)),method = "glm",method.args = list(family = "quasibinomial"))+
ylab("Number of adults")+
theme(legend.position = "none")
plots <- plot_grid(FigA, FigB, labels = "AUTO")
legend_b <- get_legend(
FigA +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
plot_grid(legend_b, plots, ncol = 1, rel_heights = c(0.1, 1))
rm(list=ls())
#Load knitr
library(knitr)
#Set some options
options(na.action='na.fail')
opts_knit$set(root.dir = '..')
opts_chunk$set(echo=FALSE,
warning=FALSE,
message=FALSE,
fig.width=5,
fig.height=4)
set.seed(181219)
FigA <- ddlong %>%
drop_na() %>%
group_by(Generation, Treatment) %>%
summarise(Extant = mean(Offspring > 0)) %>%
ggplot(aes(x = Generation, y = Extant, col = Treatment))+
geom_line(aes(group = Treatment))+
ylab("Proportion of populations surviving")+
scale_colour_manual(values = mycols)+
theme(legend.position = "none")
Fig <- ddlong %>%
ggplot(aes(x = Generation,y = Offspring,col = Treatment)) +
geom_boxplot()+
scale_colour_manual(values = mycols)+
scale_fill_manual(values = mycols)+
geom_smooth(aes(x = as.numeric(Generation)),method = "glm",method.args = list(family = "quasibinomial"))+
ylab("Number of adults")+
theme(legend.position = "none")
rm(list=ls())
#Load knitr
library(knitr)
#Set some options
options(na.action='na.fail')
opts_knit$set(root.dir = '..')
opts_chunk$set(echo=FALSE,
warning=FALSE,
message=FALSE,
fig.width=5,
fig.height=4)
set.seed(181219)
#Load and clean data
source("Scripts/TriboliumSexCol_LOAD.R")
source("Scripts/TriboliumSexCol_FUNCTIONS.r")
source("Scripts/TriboliumSexCol_CLEAN.r")
source("Scripts/TriboliumSexCol_MODELS.r")
poplin <- glm(Offspring~Treatment+as.numeric(Generation),data=filter(ddlong,Offspring>0),family = "poisson")
summary(poplin)
poppoly <- glm(Offspring~Treatment+poly(as.numeric(Generation),3),data=filter(ddlong,Offspring>0),family = "poisson")
summary(poppoly)
popfac <- glm(Offspring~Treatment+Generation,data=filter(ddlong,Offspring>0),family = "poisson")
summary(popfac)
